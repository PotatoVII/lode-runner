(include "declarations.scm")

(define (generate-font-file name)
  (let* ((font-id (path-strip-directory (path-strip-extension name)))
         (args (case (string->symbol font-id)
                 ((wall)      '(8 8 loop-x loop-y))
                 ((ladder)    '(16 16 loop-y))
                 ((handbar)   '(8 8 loop-x))
                 ((gold)      '(16 16))
                 ((player)    '(16 24))
                 ((title_bar) '(384 8))
                 ((bb_fonts)  '(8 8))
                 (else (error "Error: could not find parameters for the font: "
                              font-id)))))
   (with-output-to-file (list path: (string-append "generated/font-"
                                                   font-id ".scm"))
     (lambda ()
       (pretty-print `(begin (include "../declarations.scm")
                             ;;(include "../opengl-header.scm")
                             (include "../texture-macro.scm")
                             (include "../font-macro.scm")
                             (define-symmetric-font ,font-id ,@args)))))))